-- ████╗   ██╗   ██████╗   ██████╗  ██████╗ ██╗  ██╗ ██████╗ ██╗     █████╗  ██████╗  ██████╗ ██████╗    ██╗ --
-- ██╔██╗  ██║ ██╔═════╝   ██╔══██╗ ██╔═══╝ ██║  ██║ ██╔═══╝ ██║    ██╔══██╗ ██╔══██╗ ██╔═══╝ ██╔══██╗   ██║ --
-- ██║╚██╗ ██║ ██║         ██║  ██║ █████╗  ██║  ██║ █████╗  ██║    ██║  ██║ ██████╔╝ █████╗  ██████╔╝   ██║ --
-- ██║ ╚██╗██║ ██║         ██║  ██║ ██╔══╝  ╚██╗██╔╝ ██╔══╝  ██║    ██║  ██║ ██╔═══╝  ██╔══╝  ██╔══██╗   ╚═╝ --
-- ██║  ╚████║ ╚═██████╗   ██████╔╝ ██████╗  ╚███╔╝  ██████╗ ██████╗╚█████╔╝ ██║      ██████╗ ██║  ██║   ██╗ --
-- ╚═╝   ╚═══╝   ╚═════╝   ╚═════╝  ╚═════╝   ╚══╝   ╚═════╝ ╚═════╝ ╚════╝  ╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝ --

###################################################################################################
###################################### SERVER SIDE FUNCTIONS ######################################
###################################################################################################

########################################### GET CONFIG ############################################

# Function นี้ใช้สำหรับรับค่า Config ทั้งหมดของกระเป๋า
local config = exports.nc_inventory:GetConfig()


######################################### OPEN INVENTORY ##########################################

# Function นี้ใช้สำหรับเปิดกระเป๋าผู้เล่น
exports.nc_inventory:OpenInventory(playerId)


######################################### CLOSE INVENTORY #########################################

# Function นี้ใช้สำหรับปิดกระเป๋าผู้เล่น
exports.nc_inventory:CloseInventory(playerId)


############################################# WEIGHT ##############################################

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบัน โดย Function จะส่งค่ากลับมาเป็น น้ำหนักปัจจุบัน, น้ำหนักสูงสุด
local weight, maxWeight = exports.nc_inventory:GetInventoryWeight(playerId)

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของเงินชนิดต่างๆ
local weight = exports.nc_inventory:GetAccountWeight(accountName)

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของ Item ต่างๆ
local weight = exports.nc_inventory:GetItemWeight(itemName)

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของอาวุธต่างๆ
local weight = exports.nc_inventory:GetWeaponWeight(weaponName)


############################################## LIMIT ##############################################

# Function นี้ใช้สำหรับรับค่า Limit ของ Item ต่างๆ
local limit = exports.nc_inventory:GetItemLimit(itemName)


############################################# RARITY ##############################################

# Function นี้ใช้สำหรับรับค่าความหายากของเงินชนิดต่างๆ
local rarity = exports.nc_inventory:GetAccountRarity(accountName)

# Function นี้ใช้สำหรับรับค่าความหายากของ Item ต่างๆ
local rarity = exports.nc_inventory:GetItemRarity(itemName)

# Function นี้ใช้สำหรับรับค่าความหายากของอาวุธต่างๆ
local rarity = exports.nc_inventory:GetWeaponRarity(weaponName)


####################################### SEARCHING INVENTORY #######################################

# Function นี้ใช้สำหรับเปิดกระเป๋าผู้เล่นอื่น (ค้นตัว)
# [ playerId: เลข ID ของผู้ค้น | targetId: เลข ID ของผู้ถูกค้น | searchType: ชื่อชนิดของการค้นตัว (หากไม่ต้องจะเป็น default) | blocklist: รายชื่อการแสดงการ Block สิ่งของ ]
# ตัวอย่างการส่งค่าของ blocklist จะเหมือนกับการใช้งาน exports.nc_inventory:SetBlocklist *แต่ค่า optional (ตามตัวอย่างการใช้งาน exports.nc_inventory:SetBlocklist) ที่ไม่ถูกใส่เข้ามาจะถูก Reset เสมอหากใช้ Function นี้)
exports.nc_inventory:SearchInventory(playerId, targetId, searchType, blocklist)


##################################### VEHICLE KEY & HOUSE KEY #####################################

# หากต้องการ "เพิ่ม" กุญแจที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:AddItem(playerId, {
	name = 'plate|house_id',
	type = 'vehicle_key|house_key'
})

# หากต้องการ "ลบ" กุญแจที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:RemoveItem(playerId, {
	name = 'plate|house_id',
	type = 'vehicle_key|house_key'
})

# หากต้องการโหลดกุญแจในกระเป๋าใหม่ทั้งหมดให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:UpdateItems(playerId, 'vehicle_key|house_key')


############################################ ACCESSORY ############################################

# หากต้องการ "เพิ่ม" เครื่องประดับที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:AddItem(playerId, {
	name = 'หน้ากาก',
	type = 'accessory',
	accessoryData = {
		['mask_1'] = 1,
		['mask_2'] = 0,
	},
	optionType = 'player_mask'
})

# หากต้องการ "ลบ" เครื่องประดับที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:RemoveItem(playerId, {
	name = 'หน้ากาก',
	type = 'accessory',
	optionType = 'player_mask'
})

# หากต้องการโหลดเครื่องประดับในกระเป๋าใหม่ทั้งหมดให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:UpdateItems(playerId, 'accessory')


####################################### UPDATE WEAPON AMMO ########################################

# หากต้องการอัพเดทกระสุนของอาวุธให้ใช้ Export Function ด้านล่างนี้ (กระสุนจะเปลี่ยนเมื่อค่ากระสุนใหม่น้อยกว่าค่าของกระสุนเดิม)
exports.nc_inventory:UpdateWeaponAmmo(playerId, weaponName, weaponAmmo)


############################################## BADGE ##############################################

# หากต้องการเพิ่ม Badge ต่างๆลงใน Item ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:AddBadge(playerId, {
	key = 'key',					# ชื่อเฉพาะของ Badge
	icon = 'icon',					# Icon ของ Badge
	name = 'itemName',				# ชื่อของ Item
	type = 'itemType',				# ชนิดของ Item
	options = {						# Options ต่างๆ (css)
		priority = 1,						# ความสำคัญของ Badge *เลขน้อยอยู่บน  *optional
		iconScale = 1.0,					# ขนาดของ Icon  *optional
		iconColor = '#ffffff',				# สีของ Icon  *optional
		backgroundColor = '#000000',		# สีพื้นหลังของ Badge  *optional
		backgroundImage = 'url(img.png)',	# ภาพพื้นหลังของ Badge  *optional
		borderRadius = '50%'				# ระดับความโค้งมน  *optional
	}
})
# สำหรับ optional หากไม่ใส่จะไม่มีการเปลี่ยนแปลง
# สามารถหา Icon ได้ที่ https://icon-sets.iconify.design/

# หากต้องการลบ Badge ต่างๆที่เคยถูก Add ไว้ใน Item ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:RemoveBadge(playerId, {
	key = 'key',
	name = 'itemName',
	type = 'itemType'
})


########################################### TRANSACTION ###########################################

# หากต้องการใช้ Export Function หลายๆ Function ติดต่อกันสามารถใช้ Export Function ด้านล่างนี้ได้
# Function นี้จะ return ค่าออกมาแค่ true|false เท่านั้น (true: การทำงานทั้งหมดสำเร็จ | false: การทำงานทั้งหมดไม่สำเร็จ)
exports.nc_inventory:Transaction({
	{ name = 'functionName1', values = { ARG_1, ARG_2 } },
	{ name = 'functionName2', values = { ARG_1, ARG_2 } },
	...
})

# ตัวอย่างการใช้งาน exports.nc_inventory:Transaction ในฝั่ง Server-Side
# exports.nc_inventory:Transaction({
#     {
#         name = 'AddItem',
#         values = {
#             playerId,
#             {
#                 name = 'AAA 111',
#                 type = 'vehicle_key'
#             }
#         }
#     },
#     { name = 'OpenInventory', values = { playerId } }
# })



###################################################################################################
###################################### CLIENT SIDE FUNCTIONS ######################################
###################################################################################################

########################################### GET CONFIG ############################################

# Function นี้ใช้สำหรับรับค่า Config ทั้งหมดของกระเป๋า
local config = exports.nc_inventory:GetConfig()


######################################### OPEN INVENTORY ##########################################

# Function นี้ใช้สำหรับเปิดกระเป๋าผู้เล่น
exports.nc_inventory:OpenInventory()


######################################### CLOSE INVENTORY #########################################

# Function นี้ใช้สำหรับปิดกระเป๋าผู้เล่น
exports.nc_inventory:CloseInventory()


############################################ SHORTCUTS ############################################

# Function นี้ใช้สำหรับเปิดให้ผู้เล่นใช้งาน Shortcuts ได้
exports.nc_inventory:EnableShortcuts()

# Function นี้ใช้สำหรับปิดไม่ให้ผู้เล่นใช้งาน Shortcuts ได้
exports.nc_inventory:DisableShortcuts()


############################################# WEIGHT ##############################################

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบัน โดย Function จะส่งค่ากลับมาเป็น น้ำหนักปัจจุบัน, น้ำหนักสูงสุด
local weight, maxWeight = exports.nc_inventory:GetInventoryWeight()

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของเงินชนิดต่างๆ
local weight = exports.nc_inventory:GetAccountWeight(accountName)

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของ Item ต่างๆ
local weight = exports.nc_inventory:GetItemWeight(itemName)

# Function นี้ใช้สำหรับรับค่าน้ำหนักปัจจุบันของอาวุธต่างๆ
local weight = exports.nc_inventory:GetWeaponWeight(weaponName)


############################################## LIMIT ##############################################

# Function นี้ใช้สำหรับรับค่า Limit ของ Item ต่างๆ
local limit = exports.nc_inventory:GetItemLimit(itemName)


############################################# RARITY ##############################################

# Function นี้ใช้สำหรับรับค่าความหายากของเงินชนิดต่างๆ
local rarity = exports.nc_inventory:GetAccountRarity(accountName)

# Function นี้ใช้สำหรับรับค่าความหายากของ Item ต่างๆ
local rarity = exports.nc_inventory:GetItemRarity(itemName)

# Function นี้ใช้สำหรับรับค่าความหายากของอาวุธต่างๆ
local rarity = exports.nc_inventory:GetWeaponRarity(weaponName)


####################################### SEARCHING INVENTORY #######################################

# Function นี้ใช้สำหรับเปิดกระเป๋าผู้เล่นอื่น (ค้นตัว)
# [ targetId: เลข ID ของผู้ถูกค้น | searchType: ชื่อชนิดของการค้นตัว (หากไม่ต้องจะเป็น default) | blocklist: รายชื่อการแสดงการ Block สิ่งของ ]
# ตัวอย่างการส่งค่าของ blocklist จะเหมือนกับการใช้งาน exports.nc_inventory:SetBlocklist *แต่ค่า optional (ตามตัวอย่างการใช้งาน exports.nc_inventory:SetBlocklist) ที่ไม่ถูกใส่เข้ามาจะถูก Reset เสมอหากใช้ Function นี้)
exports.nc_inventory:SearchInventory(targetId, searchType, blocklist)


##################################### VEHICLE KEY & HOUSE KEY #####################################

# หากต้องการ "เพิ่ม" กุญแจที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:AddItem({
	name = 'plate|house_id',
	type = 'vehicle_key|house_key'
})

# หากต้องการ "ลบ" กุญแจที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:RemoveItem({
	name = 'plate|house_id',
	type = 'vehicle_key|house_key'
})

# หากต้องการโหลดกุญแจในกระเป๋าใหม่ทั้งหมดให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:UpdateItems('vehicle_key|house_key')

# หากต้องการ Reload กุญแจในกระเป๋าแบบ Manual ทีเดียวทั้งหมดตาม list ที่ส่งเข้ามาให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:UpdateItemList({
	type = 'vehicle_key|house_key',
	itemList = {
		{
			name = 'AAA 111',
			label = 'AAA 111'
		},
		{
			name = 'BBB 222',
			label = 'BBB 222'
		},
		...
	}
})

# หากต้องการข้อมูลกุญแจต่างๆให้ใช้ Export Function ด้านล่างนี้
local keys = exports.nc_inventory:GetKeys('vehicle_key|house_key')
# ค่าที่ได้จะเป็น
# 	keys =	{
# 				[keyName1] = 'keyLabel1',
# 				[keyName2] = 'keyLabel2',
# 				...
# 			}


############################################ ACCESSORY ############################################

# หากต้องการ "เพิ่ม" เครื่องประดับที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:AddItem({
	name = 'หน้ากาก',
	type = 'accessory',
	accessoryData = {
		['mask_1'] = 1,
		['mask_2'] = 0,
	},
	optionType = 'player_mask'
})

# หากต้องการ "ลบ" เครื่องประดับที่แสดงในกระเป๋า Export Function ด้านล่างนี้
exports.nc_inventory:RemoveItem({
	name = 'หน้ากาก',
	type = 'accessory',
	optionType = 'player_mask'
})

# หากต้องการโหลดเครื่องประดับในกระเป๋าใหม่ทั้งหมดให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:UpdateItems('accessory')

# หากต้องการข้อมูลเครื่องประดับต่างๆให้ใช้ Export Function ด้านล่างนี้
local accessories = exports.nc_inventory:GetAccessories(optionType)
# หากไม่ใส่ optionType จะได้รับค่าของเครื่องประดับมาทุกชิ้น
# ค่าที่ได้จะเป็น
# 	accessories =	{
# 						[optionType1] =	{
# 							[label1] =	{
# 								[maleModelHash] = maleAccessoryData1,
# 								[femaleModelHash] = femaleAccessoryData1,
# 							},
# 							[label2] =	{
# 								[maleModelHash] = maleAccessoryData2,
# 								[femaleModelHash] = femaleAccessoryData2,
# 							}
# 						},
# 						...
# 					}
# maleModelHash	= `mp_m_freemode_01`	# 1885233650
# femaleModelHash = `mp_f_freemode_01`	# -1667301416


############################################ SECONDARY ############################################

# Function นี้จะใช้ Set ค่าต่างๆในกระเป๋าสอง อีกทั้งยังสามารถอัพเดท Item เป็นชิ้นๆได้ด้วย โดยไม่ต้องอัพเดทใหม่ทั้งหมด
# Function ควรนี้จะใช้ก่อน Function => exports.nc_inventory:OpenSecondaryInventory()
exports.nc_inventory:SetSecondaryData({
	info = 'Information Text',				# ข้อความที่ต้องการจะให้แสดงในหน้ากระเป๋า
	itemList = {
		{
			name = 'itemName1',				# ชื่อ Item
			type = 'itemType1',				# ชนิดของ Item นั้นๆ (account|item|weapon)
			count = 1,						# จำนวนชิ้นที่ต้องการจะแสดง
			uniqueKey = 'uniqueKey1',		# สำหรับ type = 'weapon', Unique Key สำหรับอาวุธ (กรณีมีอาวุธแบบเดียวกันหลายชิ้น)
			price = {						# ราคาสิ่งของ
				type = 'money',				# ชนิดของค่าเงิน
				amount = 10000				# ราคา
			}
		},
		{
			name = 'itemName2',
			type = 'itemType2',
			count = 1,
			uniqueKey = 'uniqueKey2',
			price = {
				type = 'money',
				amount = 10000
			}
		},
		...
	},
	weight = 5,								# น้ำหนักปัจจุบันของกระเป๋าสอง
	maxWeight = 20							# น้ำหนักสูงสุดของกระเป๋าสอง
})
# ค่าไหนไม่ต้องการ Set ไม่จำเป็นต้องใส่ อย่างเช่น ค่า maxWeight มักจะถูก Set ค่าครั้งเดียวก่อนเปิดกระเป๋า

# Function นี้ทำหน้าที่สั่งเปิดกระเป๋าสอง โดยต้องใส่ค่าชนิดกระเป๋าเข้าไปด้วย
# ค่าชนิดกระเป๋าที่ใส่เข้าไปเพื่อที่จะเรียกหาข้อมูลการทำ Action ต่างๆรำหว่างกระเป๋าหลักกับกระเป๋าสอง
# โดย Action จะถูกส่งออกไปที่ Function => Config.OnSecondaryAction ในไฟล์ config.functions.lua
# [ name: ชื่อของการเปิดกระเป๋า 'trunk|vault|etc.' | type: ชนิดของการเปิดกระเป๋า 'normal|price' | blocklist: รายชื่อการแสดงการ Block สิ่งของ ]
# ตัวอย่างการส่งค่าของ blocklist จะเหมือนกับการใช้งาน exports.nc_inventory:SetBlocklist *แต่ค่า optional (ตามตัวอย่างการใช้งาน exports.nc_inventory:SetBlocklist) ที่ไม่ถูกใส่เข้ามาจะถูก Reset เสมอหากใช้ Function นี้)
exports.nc_inventory:OpenSecondaryInventory(name, type, blocklist)

# หากต้องการ Reload แสดงผลสิ่งของในกระเป๋าสองตามที่ต้องการใหม่โดยลบของเก่าออก ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:ReloadSecondaryData({
	info = 'Information Text',						# ข้อความที่ต้องการจะให้แสดงในหน้ากระเป๋า
	itemList = {
		{
			name = 'itemName1',						# ชื่อ Item
			type = 'itemType1',						# ชนิดของ Item นั้นๆ (account|item|weapon)
			count = 1,								# จำนวนชิ้นที่ต้องการจะแสดง
			uniqueKey = 'uniqueKey1',				# สำหรับ type = 'weapon', Unique Key สำหรับอาวุธ (กรณีมีอาวุธแบบเดียวกันหลายชิ้น)
			price = {								# ราคาสิ่งของ
				type = 'money|bank|black_money',	# ชนิดของค่าเงิน
				amount = 10000						# ราคา
			}
		},
		{
			name = 'itemName2',
			type = 'itemType2',
			count = 1,
			uniqueKey = 'uniqueKey2',
			price = {
				type = 'money|bank|black_money',
				amount = 10000
			}
		},
		...
	},
	weight = 5,										# น้ำหนักปัจจุบันของกระเป๋าสอง
	maxWeight = 20									# น้ำหนักสูงสุดของกระเป๋าสอง
})


####################################### UPDATE WEAPON AMMO ########################################

# หากต้องการอัพเดทกระสุนของอาวุธให้ใช้ Export Function ด้านล่างนี้ (กระสุนจะเปลี่ยนเมื่อค่ากระสุนใหม่น้อยกว่าค่าของกระสุนเดิม)
exports.nc_inventory:UpdateWeaponAmmo(weaponName, weaponAmmo)


########################################## WEAPON WHEEL ###########################################

# หากต้องการ เปิด/ปิด Block การใช้งาน Native Weapon Wheel สำหรับเลือกอาวุธให้ใช้ Export Function ด้านล่างนี้ (ค่า Default คือ true)
exports.nc_inventory:BlockWeaponWheel(true|false)


############################################ BLOCKLIST ############################################

# หากต้องการ ตั้งค่าการแสดงผลการ Block สิ่งของต่างๆ ในกระเป๋าให้ใช้ Export Function ด้านล่างนี้ (จะใช้งาน Function นี้ได้ขณะกระเป๋าเปิดอยู่เท่านั้น)
exports.nc_inventory:SetBlocklist({
	primary = {									# กระเป่าหลัก (ฝั่งซ้าย) *optional
		accounts = {							# เงิน *optional
			type = 'whitelist|blacklist',
			list = {
				'accountName',
			}
		},
		items = {								# สิ่งของทั่วไป *optional
			type = 'whitelist|blacklist',
			list = {
				'itemName',
			}
		},
		weapons = {								# อาวุธ *optional
			type = 'whitelist|blacklist',
			list = {
				'weaponName',
			}
		}
	},
	secondary = {								# กระเป่ารอง (ฝั่งขวา) *optional
		accounts = {							# เงิน *optional
			type = 'whitelist|blacklist',
			list = {
				'accountName',
			}
		},
		items = {								# สิ่งของทั่วไป *optional
			type = 'whitelist|blacklist',
			list = {
				'itemName',
			}
		},
		weapons = {								# อาวุธ *optional
			type = 'whitelist|blacklist',
			list = {
				'weaponName',
			}
		}
	},
})
# สำหรับ optional หากไม่ใส่จะไม่มีการเปลี่ยนแปลงใน Function นี้


######################################### EXTENDED ITEMS ##########################################

# หากต้องการเพิ่ม Item ต่างๆที่ไม่มีอยู่ใน SQL ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:SetExtendedItem({
	name = 'itemName',				# ชื่อ Item
	label = 'itemLabel',			# ป้ายชื่อ Item
	count = 1,						# จำนวน Item
	limit = -1,						# Limit ของ Item
	weight = 500,					# น้ำหนักของ Item
	rare = 0,						# ความหายากของ Item
	shortcut = true|false,			# อนุญาตให้นำ Item นี้เข้า Shortcut
	use = true|false,				# อนุญาตให้ใช้งาน Item นี้ได้
	drop = true|false,				# อนุญาตให้ทิ้ง Item นี้ได้
	give = true|false				# อนุญาตให้มอบ Item นี้ให้ผู้อื่นได้
})

# หากต้องการรับค่าข้อมูลของ Extended Item ที่ถูก Set ไว้แล้วด้วย exports.nc_inventory.SetExtendedItem ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:GetExtendedItem('itemName')

# หากต้องการลบ Extended Item ที่ถูก Set ไว้แล้วด้วย exports.nc_inventory.SetExtendedItem ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:RemoveExtendedItem('itemName')

# หากต้องการเปลี่ยนแปลงค่าต่างๆของ Extended Item ที่ถูก Set ไว้แล้วด้วย exports.nc_inventory.SetExtendedItem ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:SetExtendedItemData('itemName', 'label|count|limit|weight|rare', value)


############################################## BADGE ##############################################

# หากต้องการเพิ่ม Badge ต่างๆลงใน Item ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:AddBadge({
	key = 'key',					# ชื่อเฉพาะของ Badge
	icon = 'icon',					# Icon ของ Badge
	name = 'itemName',				# ชื่อของ Item
	type = 'itemType',				# ชนิดของ Item
	options = {						# Options ต่างๆ (css)
		priority = 1,						# ความสำคัญของ Badge *เลขน้อยอยู่บน  *optional
		iconScale = 1.0,					# ขนาดของ Icon  *optional
		iconColor = '#ffffff',				# สีของ Icon  *optional
		backgroundColor = '#000000',		# สีพื้นหลังของ Badge  *optional
		backgroundImage = 'url(img.png)',	# ภาพพื้นหลังของ Badge  *optional
		borderRadius = '50%'				# ระดับความโค้งมน  *optional
	}
})
# สำหรับ optional หากไม่ใส่จะไม่มีการเปลี่ยนแปลง
# สามารถหา Icon ได้ที่ https://icon-sets.iconify.design/

# หากต้องการลบ Badge ต่างๆที่เคยถูก Add ไว้ใน Item ให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:RemoveBadge({
	key = 'key',
	name = 'itemName',
	type = 'itemType'
})


##################################### CUSTOM INVENTORY COLORS #####################################

# หากต้องการตั้งค่าสีต่างๆในกระเป๋าของผู้เล่นระหว่างเล่นให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:SetInventoryColor({
	base = { r = RED, g = GREEN, b = BLUE },			# สีหลัก
	content = { r = RED, g = GREEN, b = BLUE },			# สีของเนื้อหา
	max_weight = { r = RED, g = GREEN, b = BLUE },		# สีหลอดน้ำหนัก (เมื่อน้ำหนักเต็ม)
	confirm_button = { r = RED, g = GREEN, b = BLUE }	# สีปุ่มยืนยัน
})
# หากไม่ใส่ค่าไหนค่านั้นจะถูก Reset เป็นค่าเริ่มต้นตาม Config.HUD.colors

# หากต้องล้างค่าสีต่างๆในกระเป๋ากลับไปเป็นค่าเริ่มต้นให้ใช้ Export Function ด้านล่างนี้
exports.nc_inventory:ResetInventoryColor()


########################################### TRANSACTION ###########################################

# หากต้องการใช้ Export Function หลายๆ Function ติดต่อกันสามารถใช้ Export Function ด้านล่างนี้ได้
# Function นี้จะ return ค่าออกมาแค่ true|false เท่านั้น (true: การทำงานทั้งหมดสำเร็จ | false: การทำงานทั้งหมดไม่สำเร็จ)
exports.nc_inventory:Transaction({
	{ name = 'functionName1', values = { ARG_1, ARG_2 } },
	{ name = 'functionName2', values = { ARG_1, ARG_2 } },
	...
})

# ตัวอย่างการใช้งาน exports.nc_inventory:Transaction ในฝั่ง Client-Side
# exports.nc_inventory:Transaction({
#     {
#         name = 'SetInventoryColor',
#         values = {
#             {
#                 base = { r = 239, g = 78, b = 184 },
#                 content = { r = 255, g = 182, b = 234 },
#                 max_weight = { r = 197, g = 27, b = 35 },
#                 confirm_button = { r = 123, g = 217, b = 174 }
#             }
#         }
#     },
#     { name = 'OpenInventory' }
# })

###################################################################################################